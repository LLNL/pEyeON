# Run workflow for both push and MR triggers, but avoid duplicate pipeline runs
# workflow:
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
#     - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
#       when: never
#     - if: '$CI_COMMIT_BRANCH'

include:
  - template: Jobs/Container-Scanning.gitlab-ci.yml # template for trivy scan
  - project: 'lc-templates/id_tokens'
    file: 'id_tokens.yml'

variables:  # these settings tell slurm to reserve a node for my job, in the pdebug partition
    LLNL_SLURM_SCHEDULER_PARAMETERS: "--nodes=1 -p pdebug --time=00:10:00 --userns"

stages:
  - build
  - test
#   - sbom

.oslic:
  tags:
    - shell
    - oslic

.borax:
  tags:
    - borax
    - batch

before_script:
  - python3 -m venv eye  # Create venv
  - source eye/bin/activate
  - pip3 install build

build:
  stage: build
  extends:
    - .oslic
  script:
    - python3 -m build
  artifacts:
    paths:
      - dist/


push_container:  # builds and pushes the container to be scanned by trivy to the gitlab container repo
  stage: build
  extends:
    - .borax
  script:
    - /collab/usr/gapps/lcweg/containers/scripts/enable-podman.sh
    - echo "${CI_REGISTRY_PASSWORD}" | podman login -u="$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - podman build --rm --pull-always --force-rm -t "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" -f .trivy.Dockerfile .
    - podman push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"
    - podman push "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG" "$CI_REGISTRY_IMAGE:latest"
    - podman logout $CI_REGISTRY


unittest:
  stage: test
  extends:
    - .oslic
  # image: python:3.10
  script:
    - ls
    - pip install dist/eyeon-*.whl
    - cd tests/
    - coverage run --source eyeon -m unittest testObserveRemote.py testParse.py testCli.py testChecksum.py
    - coverage xml
    - coverage html
    - coverage report --precision=2
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  dependencies:
    - build
  artifacts:
    paths:
      - 'tests/htmlcov/'
    reports:
      coverage_report:
        coverage_format: cobertura
        path: 'tests/coverage.xml'


container_scanning: #extends the template
  extends:
    - .oslic
  variables:
    CS_IMAGE: "$CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG"  # container to be scanned by trivy, pushed in other job
    CS_REGISTRY_USER: "$CI_REGISTRY_USER"
    CS_REGISTRY_PASSWORD: "$CI_REGISTRY_PASSWORD"
    CS_DOCKERFILE_PATH: "eyeon.Dockerfile"
    CS_DISABLE_LANGUAGE_VULNERABILITY_SCAN: "false"  # tell trivy to scan pip packages 
    CS_SEVERITY_THRESHOLD: "UNKNOWN"  # set to UNKNOWN, LOW, MEDIUM, HIGH, CRITICAL
    # ^^^ scanner outputs vulns with severity higher than threshold. 
    SECURE_LOG_LEVEL: info
  before_script:
    - echo "${CI_REGISTRY_PASSWORD}" | podman login -u="$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  dependencies:
    - build

# sbom:  # put in artifacts instead
#   stage: sbom
#   script:
#     - cd .. # back to eyeon folder
#     - ./sbom-tool generate -b / -bc src/ -pn lsbom -pv 0.2 -ps "Lawrence Livermore National Laboratory" -nsb https://www.llnl.gov/
